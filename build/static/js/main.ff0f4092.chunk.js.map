{"version":3,"sources":["Events.js","components/LoginForm.js","components/chat/ChatHeading.js","components/chat/messages/MessageInput.js","components/chat/messages/Messages.js","components/chat/ChatContainer.js","components/Game.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECEIVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","LoginForm","props","setUser","user","isUser","console","log","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","this","className","onSubmit","htmlFor","ref","input","textInput","type","id","onChange","placeholder","Component","name","MessageInput","sendMessage","message","sendTyping","lastUpdateTime","Date","now","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","length","Messages","scrollDown","bind","container","refs","scrollTop","scrollHeight","prevProps","prevState","messages","typingUsers","map","mes","sender","time","ChatContainer","initChat","COMchat","chat","on","addMessageToChat","updateTypingInChat","newChat","push","includes","filter","u","ChatHeading","Layout","initSocket","io","reconnect","logout","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff0f4092.chunk.js","sourcesContent":["module.exports = {\r\n    COMMUNITY_CHAT: \"COMMUNITY_CHAT\",\r\n    USER_CONNECTED: \"USER_CONNECTED\",\r\n    MESSAGE_RECEIVED: \"MESSAGE_RECEIVED\",\r\n    MESSAGE_SENT: \"MESSAGE_SENT\",\r\n    USER_DISCONNECTED: \"USER_DISCONNECTED\",\r\n    TYPING: \"TYPING\",\r\n    VERIFY_USER: \"VERIFY_USER\",\r\n    LOGOUT: \"LOGOUT\"\r\n}","import React, {Component} from 'react'\r\nimport { VERIFY_USER } from '../Events';\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nickname:\"\",\r\n            error:\"\"\r\n        };\r\n\r\n    }\r\n\r\n    setUser = ({user, isUser}) =>{\r\n        console.log(user, isUser)\r\n        if(isUser){\r\n            this.setError(\"User name taken\")\r\n        }\r\n        else{\r\n            this.props.setUser(user)\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n\r\n        const {socket} = this.props\r\n        const {nickname} = this.state\r\n        socket.emit(VERIFY_USER, nickname, this.setUser)\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({nickname:e.target.value})\r\n    }\r\n\r\n    setError = (error) =>{\r\n        this.setState({error})\r\n    }\r\n\r\n    render(){\r\n\r\n        const { nickname, error } = this.state\r\n        return(\r\n            <div className='login'>\r\n                <form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <label htmlFor=\"nickname\">\r\n                        <h2>Got a nickname?</h2>\r\n                    </label>\r\n                    <input \r\n                        ref={(input)=>{this.textInput = input}} \r\n                        type=\"text\"\r\n                        id=\"nickname\"\r\n                        value={nickname}\r\n                        onChange = {this.handleChange}\r\n                        placeholder={'MYCoolUsername'}\r\n                        />\r\n                    <div className=\"error\">{error ? error:null}</div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function({name}){\r\n    return(\r\n        <div className=\"chat-header\">\r\n            <div className=\"user-info\">\r\n                <div className=\"user-name\">{name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tmessage:\"\",\r\n\t  \tisTyping:false\r\n\t  };\r\n\r\n\t}\r\n\t\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({message:\"\"})\r\n\t}\r\n\r\n\tsendMessage = ()=>{\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  this.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = ()=>{\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Typing\");\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\tif((Date.now() - this.lastUpdateTime) > 300){\r\n\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\t\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Stop Typing\");\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form \r\n\t\t\t\t\tonSubmit={ this.handleSubmit }\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tid = \"message\"\r\n\t\t\t\t\t\tref = {\"messageinput\"}\r\n\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\tclassName = \"form-control\"\r\n\t\t\t\t\t\tvalue = { message }\r\n\t\t\t\t\t\tautoComplete = {'off'}\r\n\t\t\t\t\t\tplaceholder = \"Type something interesting\"\r\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\r\n\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t({target})=>{\r\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled = { message.length < 1 }\r\n\t\t\t\t\t\ttype = \"submit\"\r\n\t\t\t\t\t\tclassName = \"send\"\r\n\r\n\t\t\t\t\t> Send </button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\t\r\n\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\t}\r\n\r\n\tscrollDown(){\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props\r\n\t\tconsole.log(\"mess\"+ messages)\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessages.map((mes)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, {Component} from 'react'\r\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECEIVED, TYPING } from '../../Events';\r\nimport ChatHeading from './ChatHeading';\r\nimport MessageInput from './messages/MessageInput';\r\nimport Messages from './messages/Messages';\r\n\r\nexport default class ChatContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            chat: {messages:[],\r\n                   user:\"\",\r\n                   typingUsers:[]},\r\n        };\r\n\r\n        this.initChat = this.initChat.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { socket } = this.props\r\n        socket.emit(COMMUNITY_CHAT, this.initChat)\r\n    }\r\n\r\n    /*\r\n    *   Reset the chat back to only the chat passed in\r\n    *   @param chat {Chat}\r\n    */\r\n    initChat = (COMchat)=>{\r\n        const { socket } = this.props\r\n        this.setState({chat: COMchat})\r\n        socket.on(MESSAGE_RECEIVED, this.addMessageToChat())\r\n        socket.on(TYPING, this.updateTypingInChat())\r\n    }\r\n\r\n    /*\r\n    *   Returns a function that will \r\n    *   add a msseage to the chat\r\n    * \r\n    */\r\n    addMessageToChat = () =>{\r\n        return (message) => {\r\n            const { chat } = this.state\r\n            let newChat = chat.messages.push(message)\r\n            this.setState({newChat})\r\n        }\r\n    }\r\n\r\n    /*\r\n    *   Updates the typing of chat \r\n    */\r\n    /*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = () =>{\r\n\t\treturn ({user, isTyping}) =>{ \r\n            if(user !== this.props.user.name){\r\n                const { chat } = this.state\r\n                let newChat = chat\r\n    \r\n                if(isTyping && !chat.typingUsers.includes(user))\r\n                    newChat = chat.typingUsers.push(user)\r\n                else if(!isTyping && chat.typingUsers.includes(user))\r\n                    newChat = chat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n                    \r\n                this.setState({newChat})\r\n                console.log(newChat)\r\n                }\r\n        }\r\n\t}\r\n\r\n    /*\r\n    *   Adds a message to the chat\r\n    *   @param message {string} The message to be added to the chat.\r\n    */\r\n    sendMessage = (message) => {\r\n        const { socket } = this.props\r\n        socket.emit(MESSAGE_SENT, {message})\r\n    }\r\n\r\n    /*\r\n    *   Sends typing status to the server\r\n    *   typing {boolean} If the user is still typing or not.\r\n    */\r\n    sendTyping = (isTyping) => {\r\n        const { socket } = this.props\r\n        socket.emit(TYPING, {isTyping})\r\n    }\r\n\r\n\r\n    render(){\r\n        const {user} = this.props\r\n        const {chat} = this.state\r\n        console.log(chat)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"chat-room-container\">\r\n                    <div className =\"chat-room\">\r\n                        <ChatHeading name=\"Werewolf Chat\"/>\r\n                        <Messages \r\n                            messages= {chat.messages}\r\n                            user = {user}\r\n                            typingUsers = {chat.typingUsers}\r\n                        />\r\n                        <MessageInput\r\n                            sendMessage={\r\n                                (message)=>{\r\n                                    this.sendMessage(message)\r\n                                }\r\n                            }\r\n                            sendTyping={\r\n                                (isTyping) =>{\r\n                                    this.sendTyping(isTyping)\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>             \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ChatContainer from './chat/ChatContainer'\r\n\r\nexport default class Layout extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const {socket, user} = this.props\r\n        return(\r\n            <div className=\"container\">\r\n                <ChatContainer socket={socket} user={user} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport  io from 'socket.io-client'\r\nimport { LOGOUT, USER_CONNECTED, VERIFY_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport Game from './Game'\r\n\r\nconst socketURL = \"/\" //build\r\n//const socketURL = \"http://localhost:3231\" //dev\r\n\r\nexport default class Layout extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            socket: null,\r\n            user:null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.initSocket()\r\n    }\r\n\r\n    /*\r\n    *   Connect to and intializes socket.\r\n    */\r\n\r\n    initSocket = ()=>{\r\n        const socket = io(socketURL)\r\n\r\n        socket.on('connect', ()=>{\r\n            if(this.state.user){\r\n                this.reconnect(socket)\r\n            }else{\r\n                console.log(\"Connected\")\r\n            }\r\n            console.log(\"Connected\")\r\n        })\r\n\r\n        this.setState({socket})\r\n    }\r\n\r\n    reconnect = (socket) => {\r\n        socket.emit(VERIFY_USER, this.state.user.name, ({isUser, user})=>{\r\n            if(isUser){\r\n                this.setState({user:null})\r\n            }else{\r\n                this.setUser(user)\r\n            }\r\n        })\r\n    }\r\n\r\n    /*\r\n    * Sets the user property in state\r\n    * @param user {id:number, name:string}\r\n    */\r\n    setUser = (user)=>{\r\n        const { socket } = this.state\r\n        socket.emit(USER_CONNECTED, user);\r\n        this.setState({user})\r\n    }\r\n\r\n    /*\r\n    * Sets the user property in state to null\r\n    */\r\n   logout = ()=>{\r\n       const { socket } = this.state\r\n       socket.emit(LOGOUT)\r\n       this.setState({user:null})\r\n   }\r\n\r\n    render() {\r\n        const { title } = this.props\r\n        const { socket, user } = this.state\r\n        return(\r\n            <div className=\"container\">\r\n                {\r\n                    !user ?\r\n                    <LoginForm socket={socket} setUser={this.setUser}/>\r\n                    :\r\n                    <Game socket={socket} user={user} logout={this.logout}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport Layout from './components/Layout'\nimport './index.css'\n\nclass App extends Component {\n    render(){\n      return (\n        <Layout title=\"Werewolf\"/>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}