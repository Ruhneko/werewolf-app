{"version":3,"sources":["Events.js","images/werewolf-vector.png","components/LoginForm.js","components/chat/ChatHeading.js","components/chat/messages/MessageInput.js","components/chat/messages/Messages.js","components/chat/ChatContainer.js","images/back.jpg","images/werewolf.png","images/seer.png","images/robber.png","images/villager.png","components/play-area/PlayerButton.js","components/play-area/PlayerCard.js","components/play-area/Timer.js","components/play-area/CenterDeck.js","components/play-area/PlayArea.js","components/user-info/InfoPanel.js","components/Game.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECEIVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","TEMP_END","RESET","CHANGE_TURN","PLAYER_DONE","GAME_START","INITIALIZE","WEREWORLF_START","UPDATE_USER","SKIP_DISCUSSION","SKIP_OK","ROBBER_SWAP","PLAYER_VOTE","GET_RANDOM","LoginForm","props","setUser","user","isUser","gameStart","setState","joined","setError","handleJoin","e","preventDefault","socket","nickname","state","window","alert","document","getElementsByClassName","disabled","emit","handleStart","handleChange","target","value","handleTempEnd","error","this","connectedUsers","className","src","WEREWOLF_VECTOR","htmlFor","ref","input","textInput","type","id","onChange","placeholder","Button","onClick","Object","keys","length","Component","name","MessageInput","handleSubmit","sendMessage","message","sendTyping","lastUpdateTime","Date","now","setHours","getHours","isTyping","startCheckingTyping","console","log","typingInterval","setInterval","stopCheckingTyping","clearInterval","onSubmit","autoComplete","onKeyUp","keyCode","Messages","scrollDown","bind","container","refs","scrollTop","scrollHeight","prevProps","prevState","messages","typingUsers","map","mes","sender","time","ChatContainer","initChat","COMchat","chat","on","addMessageToChat","updateTypingInChat","newChat","push","includes","filter","u","ChatHeading","isCenterDeck","turn","cardAccount","handleLook","handleRob","handleVote","handleLook2","centerDeck","getWerewolves","role","playerDone","card1","card2","PlayerCard","seer_look","getVotes","userID","robber","robbed","voter","vote","ROLE_WEREWOLF_IMAGE","ROLE_SEER_IMAGE","ROLE_ROBBER_IMAGE","ROLE_VILLAGER_IMAGE","HIDDEN_IMAGE","votes","key","voteID","photo","getPhoto","divStyle","backgroundImage","backgroundPosition","backgroundSize","style","PlayerButton","Timer","seconds","timer","startTimer","countDown","change","cards","werewolves","text","PlayArea","god","Cards","InfoPanel","skip","skipDiscussion","role_name","role_desc","swappedRole","getRoleName","getDescription","alt","Layout","initTurn","resetTimer","initSocket","io","reconnect","start","updateUser","forEach","setStart","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6677aa8c.chunk.js","sourcesContent":["module.exports = {\r\n    COMMUNITY_CHAT: \"COMMUNITY_CHAT\",\r\n    USER_CONNECTED: \"USER_CONNECTED\",\r\n    MESSAGE_RECEIVED: \"MESSAGE_RECEIVED\",\r\n    MESSAGE_SENT: \"MESSAGE_SENT\",\r\n    USER_DISCONNECTED: \"USER_DISCONNECTED\",\r\n    TYPING: \"TYPING\",\r\n    VERIFY_USER: \"VERIFY_USER\",\r\n    LOGOUT: \"LOGOUT\",\r\n    TEMP_END: \"TEMP_END\",\r\n    RESET: \"RESET\",\r\n    CHANGE_TURN: \"CHANGER_TURN\",\r\n    PLAYER_DONE: \"PLAYER_DONE\",\r\n    GAME_START:\"GAME_START\",\r\n    INITIALIZE: \"INITIALIZE\",\r\n    WEREWORLF_START: \"WEREWOLF_START\",\r\n    UPDATE_USER: \"UPDATE_USER\",\r\n    SKIP_DISCUSSION: \"SKIP_DISCUSSION\",\r\n    SKIP_OK: \"SKIP_OK\",\r\n    ROBBER_SWAP: \"ROBBER_SWAP\",\r\n    PLAYER_VOTE: \"PLAYER_VOTE\",\r\n    GET_RANDOM: \"GET_RANDOM\"\r\n}","export default __webpack_public_path__ + \"static/media/werewolf-vector.79af0c25.png\";","import React, {Component} from 'react'\r\nimport { VERIFY_USER, GAME_START, TEMP_END } from '../Events'\r\nimport WEREWOLF_VECTOR from '../images/werewolf-vector.png';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            nickname:\"\",\r\n            error:\"\",\r\n            joined: false\r\n        };\r\n\r\n    }\r\n\r\n    setUser = ({user, isUser, gameStart}) =>{\r\n        if(!gameStart){\r\n            if(isUser){\r\n                this.setError(\"User name taken\")\r\n            }\r\n            else{\r\n                this.setState({joined:true})\r\n                this.props.setUser(user)\r\n            }\r\n        }\r\n        else{\r\n            if(isUser){\r\n                this.setState({joined:true})\r\n                this.props.setUser(user)\r\n            }\r\n            else{\r\n                this.setError(\"A game is Ongoing\")\r\n            }\r\n        }\r\n   \r\n    }\r\n\r\n    handleJoin = (e)=>{\r\n        e.preventDefault()\r\n\r\n        const {socket} = this.props\r\n        const {nickname} = this.state\r\n        \r\n        if(nickname == '')\r\n        {\r\n            window.alert(\"Please enter a nickname!\");\r\n            document.getElementsByClassName(\"joinBtn\").disabled = true;\r\n        }\r\n        else\r\n            socket.emit(VERIFY_USER, nickname, this.setUser)\r\n    }\r\n\r\n    handleStart = (e)=>{\r\n        e.preventDefault()\r\n\r\n        const {socket} = this.props\r\n        socket.emit(GAME_START)\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n        this.setState({nickname:e.target.value})\r\n    }\r\n\r\n    handleTempEnd = (e) => {\r\n        e.preventDefault()\r\n        const {socket} = this.props\r\n        socket.emit(TEMP_END)\r\n    }\r\n\r\n    setError = (error) =>{\r\n        this.setState({error})\r\n    }\r\n\r\n    render(){\r\n\r\n        const { nickname, error, joined} = this.state\r\n        const {connectedUsers} = this.props\r\n        return(\r\n            <div className='login'>\r\n                <form className=\"login-form\" >\r\n                    <img src ={WEREWOLF_VECTOR}/>\r\n                    <label htmlFor=\"nickname\">\r\n                        <h2><b>Got a nickname?</b></h2>\r\n                    </label>\r\n                    <input \r\n                        ref={(input)=>{this.textInput = input}} \r\n                        type=\"text\"\r\n                        id=\"nickname\"\r\n                        value={nickname}\r\n                        onChange = {this.handleChange}\r\n                        placeholder={'Enter Username'}\r\n                        />\r\n                    <div className=\"error\">{error ? error:null}</div>\r\n                    <Button type=\"submit\" className=\"joinBtn\" onClick={this.handleJoin} disabled={joined}> Join Game </Button>\r\n                    <p/>\r\n                    <Button type=\"submit\" onClick={this.handleStart} disabled={!joined}>Start Game</Button>\r\n                    <p> {connectedUsers ? \"Currently Connected Users(3-6 to start): \" +  Object.keys(connectedUsers).length : null }</p>                   \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default function({name}){\r\n    return(\r\n        <div className=\"chat-header\">\r\n            <div className=\"user-info\">\r\n                <div className=\"user-name\">{name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tmessage:\"\",\r\n\t  \tisTyping:false\r\n\t  };\r\n\r\n\t}\r\n\t\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({message:\"\"})\r\n\t}\r\n\r\n\tsendMessage = ()=>{\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  this.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = ()=>{\r\n\t\tthis.lastUpdateTime = Date.now().setHours(Date.now().getHours() + 8 )\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Typing\");\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\tif((Date.now().setHours(Date.now().getHours() + 8 ) - this.lastUpdateTime) > 300){\r\n\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\t\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Stop Typing\");\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form \r\n\t\t\t\t\tonSubmit={ this.handleSubmit }\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tid = \"message\"\r\n\t\t\t\t\t\tref = {\"messageinput\"}\r\n\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\tclassName = \"form-control\"\r\n\t\t\t\t\t\tvalue = { message }\r\n\t\t\t\t\t\tautoComplete = {'off'}\r\n\t\t\t\t\t\tplaceholder = \"Type something interesting\"\r\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\r\n\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t({target})=>{\r\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled = { message.length < 1 }\r\n\t\t\t\t\t\ttype = \"submit\"\r\n\t\t\t\t\t\tclassName = \"send\"\r\n\r\n\t\t\t\t\t> Send </button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\t\r\n\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\t}\r\n\r\n\tscrollDown(){\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props\r\n\t\tconsole.log(\"mess\"+ messages)\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessages.map((mes)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, {Component} from 'react'\r\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECEIVED, TYPING } from '../../Events';\r\nimport ChatHeading from './ChatHeading';\r\nimport MessageInput from './messages/MessageInput';\r\nimport Messages from './messages/Messages';\r\n\r\nexport default class ChatContainer extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            chat: {messages:[],\r\n                   user:\"\",\r\n                   typingUsers:[]},\r\n        };\r\n\r\n        this.initChat = this.initChat.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { socket } = this.props\r\n        socket.emit(COMMUNITY_CHAT, this.initChat)\r\n    }\r\n\r\n    /*\r\n    *   Reset the chat back to only the chat passed in\r\n    *   @param chat {Chat}\r\n    */\r\n    initChat = (COMchat)=>{\r\n        const { socket } = this.props\r\n        this.setState({chat: COMchat})\r\n        socket.on(MESSAGE_RECEIVED, this.addMessageToChat())\r\n        socket.on(TYPING, this.updateTypingInChat())\r\n    }\r\n\r\n    /*\r\n    *   Returns a function that will \r\n    *   add a msseage to the chat\r\n    * \r\n    */\r\n    addMessageToChat = () =>{\r\n        return (message) => {\r\n            const { chat } = this.state\r\n            let newChat = chat.messages.push(message)\r\n            this.setState({newChat})\r\n        }\r\n    }\r\n\r\n    /*\r\n    *   Updates the typing of chat \r\n    */\r\n    /*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = () =>{\r\n\t\treturn ({user, isTyping}) =>{ \r\n            if(user !== this.props.user.name){\r\n                const { chat } = this.state\r\n                let newChat = chat\r\n    \r\n                if(isTyping && !chat.typingUsers.includes(user))\r\n                    newChat = chat.typingUsers.push(user)\r\n                else if(!isTyping && chat.typingUsers.includes(user))\r\n                    newChat = chat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n                    \r\n                this.setState({newChat})\r\n                console.log(newChat)\r\n                }\r\n        }\r\n\t}\r\n\r\n    /*\r\n    *   Adds a message to the chat\r\n    *   @param message {string} The message to be added to the chat.\r\n    */\r\n    sendMessage = (message) => {\r\n        const { socket } = this.props\r\n        socket.emit(MESSAGE_SENT, {message})\r\n    }\r\n\r\n    /*\r\n    *   Sends typing status to the server\r\n    *   typing {boolean} If the user is still typing or not.\r\n    */\r\n    sendTyping = (isTyping) => {\r\n        const { socket } = this.props\r\n        socket.emit(TYPING, {isTyping})\r\n    }\r\n\r\n\r\n    render(){\r\n        const {user} = this.props\r\n        const {chat} = this.state\r\n        console.log(chat)\r\n        return(\r\n            <div className=\"chat-room-container\">\r\n                    <div className =\"chat-room\">\r\n                        <ChatHeading name=\"Werewolf Chat\"/>\r\n                        <Messages \r\n                            messages= {chat.messages}\r\n                            user = {user}\r\n                            typingUsers = {chat.typingUsers}\r\n                        />\r\n                        <MessageInput\r\n                            sendMessage={\r\n                                (message)=>{\r\n                                    this.sendMessage(message)\r\n                                }\r\n                            }\r\n                            sendTyping={\r\n                                (isTyping) =>{\r\n                                    this.sendTyping(isTyping)\r\n                                }\r\n                            }\r\n                        />\r\n                    </div>             \r\n                </div>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/back.163f6391.jpg\";","export default __webpack_public_path__ + \"static/media/werewolf.650f642e.png\";","export default __webpack_public_path__ + \"static/media/seer.eac01de8.png\";","export default __webpack_public_path__ + \"static/media/robber.4a5fb38a.png\";","export default __webpack_public_path__ + \"static/media/villager.60e02a77.png\";","import React from 'react'\r\n\r\nexport default function({isCenterDeck, turn, cardAccount, user, handleLook, handleRob, handleVote, handleLook2, centerDeck, getWerewolves}){\r\n\r\n    if(!isCenterDeck){\r\n        if(turn == \"START_VOTE\" && cardAccount.id != user.id){\r\n            return(\r\n               <button className=\"vote-button\" onClick={()=>handleVote(user.id, cardAccount.name)}>Vote</button>\r\n            )\r\n        }\r\n        else if(turn == \"ROLE_SEER\" &&  user.role == \"ROLE_SEER\" && user.playerDone == false && cardAccount.id != user.id){\r\n            return(\r\n                <button className=\"seer-button\" onClick={()=>handleLook(cardAccount.id)}>Look</button>\r\n            )\r\n        }\r\n        else if(turn == \"ROLE_ROBBER\" &&  user.role == \"ROLE_ROBBER\" && user.playerDone == false && cardAccount.id != user.id){\r\n            return(\r\n                <button className=\"swap-button\" onClick={()=>handleRob(user, cardAccount)}>Swap</button>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <p></p>\r\n            ) \r\n        }\r\n    }\r\n    else{\r\n        if(turn == \"ROLE_WEREWOLF\" &&  user.role == \"ROLE_WEREWOLF\" && user.playerDone == false && centerDeck.length >= 1 && getWerewolves() < 2){\r\n            return(\r\n                <button className=\"look-button\" onClick={()=>handleLook(user, 1)}>Look at Center</button>\r\n            )\r\n        }\r\n\r\n        else if(turn == \"ROLE_SEER\" &&  user.role == \"ROLE_SEER\" && user.playerDone == false && centerDeck.length >= 2){\r\n            return(\r\n                <button className=\"look-button\" onClick={()=>handleLook(user, 2)}>Look at Center</button>\r\n            )\r\n        }\r\n\r\n        else if(turn == \"ROLE_SEER\" &&  user.role == \"ROLE_SEER\" && user.playerDone == true && centerDeck.length >= 2 \r\n            && user.card1 != -1 && user.card2 != -1){\r\n            return(\r\n                <button className=\"look-button\" onClick={()=>handleLook2()}>Look at other Card</button>\r\n            )\r\n        }\r\n\r\n        else{\r\n            return(\r\n                <p></p>\r\n            ) \r\n        }\r\n    } \r\n}","import React, { Component } from 'react'\r\nimport HIDDEN_IMAGE from '../../images/back.jpg'\r\nimport ROLE_WEREWOLF_IMAGE from '../../images/werewolf.png'\r\nimport ROLE_SEER_IMAGE from '../../images/seer.png'\r\nimport ROLE_ROBBER_IMAGE from '../../images/robber.png'\r\nimport ROLE_VILLAGER_IMAGE from '../../images/villager.png'\r\nimport PlayerButton from './PlayerButton'\r\nimport { PLAYER_DONE, ROBBER_SWAP, PLAYER_VOTE} from '../../Events'\r\n\r\nexport default class PlayerCard extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            seer_look: \"\",\r\n        }\r\n\r\n        this.handleLook = this.handleLook.bind(this)\r\n        this.handleRob = this.handleRob.bind(this)\r\n        this.handleVote = this.handleVote.bind(this)\r\n        this.getVotes = this.getVotes.bind(this)\r\n  \r\n    }\r\n\r\n    handleLook(userID){\r\n        const {socket} = this.props\r\n        this.setState({seer_look: userID})\r\n        socket.emit(PLAYER_DONE)\r\n    }\r\n\r\n    handleRob(robber, robbed){\r\n        const {socket} = this.props\r\n        socket.emit(ROBBER_SWAP, robber, robbed)\r\n    }\r\n\r\n    handleVote(voter, vote){\r\n        const {socket} = this.props\r\n        socket.emit(PLAYER_VOTE, voter, vote)\r\n    }\r\n\r\n    getPhoto(role){\r\n        switch (role){\r\n            case \"ROLE_WEREWOLF\": return ROLE_WEREWOLF_IMAGE; break;\r\n            case \"ROLE_SEER\": return ROLE_SEER_IMAGE; break;\r\n            case \"ROLE_ROBBER\": return ROLE_ROBBER_IMAGE; break\r\n            case \"ROLE_VILLAGER\": return ROLE_VILLAGER_IMAGE; break\r\n            default: return HIDDEN_IMAGE\r\n        }\r\n    }\r\n\r\n    getVotes()\r\n    {\r\n        const {connectedUsers, cardAccount} = this.props\r\n        let votes = 0\r\n        Object.keys(connectedUsers).map(key =>{\r\n            if(connectedUsers[key].voteID == cardAccount.name){\r\n                votes++\r\n            }\r\n        })\r\n        return votes\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n        const {socket, turn, cardAccount, user} = this.props\r\n        const {seer_look} = this.state\r\n        var photo = HIDDEN_IMAGE\r\n        var votes = 0\r\n\r\n        if(turn == \"ROLE_WEREWOLF\" && user.role == \"ROLE_WEREWOLF\" && cardAccount.role == \"ROLE_WEREWOLF\"){\r\n            photo = ROLE_WEREWOLF_IMAGE\r\n        }\r\n\r\n        if(turn == \"ROLE_SEER\" && seer_look == cardAccount.id && user.role == \"ROLE_SEER\"){\r\n            photo = this.getPhoto(cardAccount.role)\r\n        }\r\n\r\n        if(turn == \"RESULTS\"){\r\n           photo = this.getPhoto(cardAccount.role)\r\n           votes = this.getVotes()\r\n        }\r\n        \r\n        const divStyle = {\r\n            backgroundImage: 'url(' + photo + ')',\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n        };\r\n\r\n        return(\r\n            <div className=\"player-card\" style={divStyle}>\r\n                <div className=\"player-card content\">\r\n                   {cardAccount.name + \"\\n\"}\r\n                   {\r\n                   turn == \"RESULTS\"\r\n                   ? <div className=\"player-card-content\">VOTES:{votes}</div>\r\n                   : null\r\n                }\r\n                </div>     \r\n                <PlayerButton isCenterDeck={false} turn = {turn}  cardAccount={cardAccount} user={user} \r\n                    handleLook={this.handleLook} handleRob={this.handleRob} handleVote={this.handleVote} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {seconds: 0}\r\n      this.timer = 0;\r\n      this.startTimer = this.startTimer.bind(this);\r\n      this.countDown = this.countDown.bind(this);\r\n    }\r\n  \r\n  \r\n    componentDidMount(){\r\n        this.setState({ seconds: this.props.seconds});\r\n    }\r\n \r\n    startTimer() {\r\n      if (this.timer == 0 && this.state.seconds > 0) {\r\n        this.timer = setInterval(this.countDown, 1000);\r\n      }\r\n    }\r\n  \r\n    countDown() {\r\n      // Remove one second, set state so a re-render happens.\r\n      let seconds = this.state.seconds - 1\r\n      this.setState({seconds})\r\n      \r\n      // Check if we're at zero.\r\n      if (this.state.seconds == 0) { \r\n        clearInterval(this.timer);\r\n      }\r\n    }\r\n  \r\n    render() {\r\n        this.startTimer()\r\n        return(\r\n            <div>\r\n            {this.state.seconds}\r\n            </div>\r\n        );\r\n    }\r\n  }","import React, { Component } from 'react'\r\nimport HIDDEN_IMAGE from '../../images/back.jpg'\r\nimport ROLE_WEREWOLF_IMAGE from '../../images/werewolf.png'\r\nimport ROLE_SEER_IMAGE from '../../images/seer.png'\r\nimport ROLE_ROBBER_IMAGE from '../../images/robber.png'\r\nimport ROLE_VILLAGER_IMAGE from '../../images/villager.png'\r\nimport PlayerButton from './PlayerButton'\r\nimport {GET_RANDOM, PLAYER_DONE} from '../../Events'\r\n\r\nexport default class PlayerCard extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state={\r\n            centerDeck:[],\r\n            change:false, \r\n        }\r\n\r\n        this.handleLook = this.handleLook.bind(this)\r\n        this.handleLook2 = this.handleLook2.bind(this)\r\n        this.getWerewolves = this.getWerewolves.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {centerDeck} = this.props\r\n        this.setState({centerDeck})\r\n        console.log(centerDeck)\r\n    }\r\n\r\n    handleLook(user, cards){\r\n        const {socket} = this.props\r\n        socket.emit(PLAYER_DONE)\r\n        socket.emit(GET_RANDOM, user, cards)\r\n    }\r\n\r\n    handleLook2(){\r\n        let {change} = this.state\r\n        change = !change\r\n        this.setState({change})\r\n    }\r\n\r\n    getPhoto(role){\r\n        switch (role){\r\n            case \"ROLE_WEREWOLF\": return ROLE_WEREWOLF_IMAGE; break;\r\n            case \"ROLE_SEER\": return ROLE_SEER_IMAGE; break;\r\n            case \"ROLE_ROBBER\": return ROLE_ROBBER_IMAGE; break\r\n            case \"ROLE_VILLAGER\": return ROLE_VILLAGER_IMAGE; break\r\n            default: return HIDDEN_IMAGE\r\n        }\r\n    }\r\n\r\n    getWerewolves()\r\n    {\r\n        const {connectedUsers} = this.props\r\n        let werewolves = 0\r\n        Object.keys(connectedUsers).map(key =>{\r\n            if(connectedUsers[key].role == \"ROLE_WEREWOLF\"){\r\n                werewolves++\r\n            }\r\n        })\r\n        return werewolves\r\n    }\r\n    \r\n    render() {\r\n        const {socket, turn, user} = this.props\r\n        const {centerDeck, change} = this.state\r\n        \r\n        var photo = HIDDEN_IMAGE\r\n        var text = \"CENTER DECK\"\r\n\r\n        if(turn == \"ROLE_WEREWOLF\" && user.role == \"ROLE_WEREWOLF\" && user.card1 != -1){\r\n            photo = this.getPhoto(centerDeck[user.card1])\r\n            text = \"CARD 1\"\r\n        }\r\n\r\n        if(turn == \"ROLE_SEER\" && user.role == \"ROLE_SEER\" && user.card1 != -1 && user.card2 != -1){\r\n            if(!change){\r\n                photo = this.getPhoto(centerDeck[user.card1])\r\n                text = \"CARD 1\"\r\n            }\r\n            else{\r\n                photo = this.getPhoto(centerDeck[user.card2])\r\n                text = \"CARD 2\"\r\n            }\r\n        }\r\n\r\n        const divStyle = {\r\n            backgroundImage: 'url(' + photo + ')',\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n        };\r\n\r\n        return(\r\n            <div className=\"player-card\" style={divStyle}>\r\n                <div className=\"player-card content\">{text}</div>\r\n                <PlayerButton isCenterDeck={true} turn = {turn}  user={user} centerDeck={centerDeck} \r\n                handleLook={this.handleLook} handleLook2={this.handleLook2} getWerewolves={this.getWerewolves}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PlayerCard from './PlayerCard';\r\nimport Timer from './Timer';\r\nimport CenterDeck from './CenterDeck';\r\n\r\n\r\nexport default class PlayArea extends Component {\r\n\r\n    /*\r\n        static ROLE_WEREWOLF = \"ROLE_WEREWOLF\";\r\n        static ROLE_SEER = \"ROLE_SEER\";\r\n        static ROLE_ROBBER = \"ROLE_ROBBER\";\r\n        static ROLE_TROUBLEMAKER = \"ROLE_TROUBLEMAKER\";\r\n        static ROLE_VILLAGER = \"ROLE_VILLAGER\";\r\n    */\r\n \r\n\r\n    render() {\r\n        const {socket, user, connectedUsers, centerDeck, turn, seconds, god } = this.props\r\n        let Cards = Object.keys(connectedUsers).map(key=> {\r\n            return (<PlayerCard socket={socket} turn={turn} cardAccount={connectedUsers[key]}  user={user} connectedUsers={connectedUsers} />)\r\n        })\r\n\r\n        //console.log(Cards)\r\n\r\n        return(\r\n            <div className=\"playArea\">\r\n                <div className=\"timer\"><Timer key={seconds} seconds={seconds} /></div>\r\n                <div className=\"god\">{god}</div>\r\n                <div className=\"playArea-row\">\r\n                   {Cards}\r\n                   <CenterDeck socket={socket} turn={turn} user={user} centerDeck={centerDeck} connectedUsers={connectedUsers}/>\r\n                </div>        \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport HIDDEN_IMAGE from '../../images/back.jpg'\r\nimport ROLE_WEREWOLF_IMAGE from '../../images/werewolf.png'\r\nimport ROLE_SEER_IMAGE from '../../images/seer.png'\r\nimport ROLE_ROBBER_IMAGE from '../../images/robber.png'\r\nimport ROLE_VILLAGER_IMAGE from '../../images/villager.png'\r\nimport { SKIP_DISCUSSION, SKIP_OK } from '../../Events'\r\n\r\n\r\nexport default class InfoPanel extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            skip: false,\r\n        }\r\n\r\n        this.skipDiscussion = this.skipDiscussion.bind(this)\r\n    }\r\n    getPhoto(role){\r\n        switch (role){\r\n            case \"ROLE_WEREWOLF\": return ROLE_WEREWOLF_IMAGE; break;\r\n            case \"ROLE_SEER\": return ROLE_SEER_IMAGE; break;\r\n            case \"ROLE_ROBBER\": return ROLE_ROBBER_IMAGE; break\r\n            case \"ROLE_VILLAGER\": return ROLE_VILLAGER_IMAGE; break\r\n            default: return HIDDEN_IMAGE\r\n        }\r\n    }\r\n\r\n    getRoleName(role){\r\n        switch (role){\r\n            case \"ROLE_WEREWOLF\": return \"Werewolf\"; break;\r\n            case \"ROLE_SEER\": return \"Seer\"; break;\r\n            case \"ROLE_ROBBER\": return \"Robber\"; break\r\n            case \"ROLE_VILLAGER\": return \"Villager\"; break\r\n            default: return \"Error\"\r\n        }\r\n    }\r\n\r\n    getDescription(role){\r\n        switch (role){\r\n            case \"ROLE_WEREWOLF\": return \"When the Werewolves wake up, along with the other Werewolves, to see who they are. If a Werewolf wakes up and they see no other Werewolves, they are allowed to look at one card in the center.\"; break;\r\n            case \"ROLE_SEER\": return \"When the Seer wakes up, they can either look at a player's card or 2 cards in the center.\"; break;\r\n            case \"ROLE_ROBBER\": return \"When the Robber wakes up, they can trade their card with another player's card, then look at their new card.\"; break\r\n            case \"ROLE_VILLAGER\": return \"The Villager remains asleep throughout the night and does not take any actions during this phase\"; break\r\n            default: return \"Error\"\r\n        }\r\n    }\r\n\r\n    skipDiscussion(){\r\n        const {socket} = this.props\r\n        socket.emit(SKIP_DISCUSSION)\r\n        socket.on(SKIP_OK, ()=>{\r\n            this.setState({skip: true})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {socket, user, turn} = this.props\r\n        const {skip} = this.state\r\n\r\n        var photo = \"\"\r\n        var role_name = \"\"\r\n        var role_desc = \"\"\r\n\r\n        user.role == \"ROLE_ROBBER\" && user.swappedRole != \"\" ? photo =  this.getPhoto(user.swappedRole) :  photo = this.getPhoto(user.role)\r\n        user.role == \"ROLE_ROBBER\" && user.swappedRole != \"\" ? role_name =  this.getRoleName(user.swappedRole) :  role_name = this.getRoleName(user.role)\r\n        user.role == \"ROLE_ROBBER\" && user.swappedRole != \"\" ? role_desc =  this.getDescription(user.swappedRole) :  role_desc = this.getDescription(user.role)\r\n\r\n        return(\r\n            <div className=\"info-panel\">\r\n                <div className=\"info-box\">\r\n                    Info:\r\n                    <img className=\"info-image\" src={photo} alt={role_name}/>\r\n                    {role_name}\r\n                 </div>\r\n                 <div className=\"container-row\">\r\n                    <div className=\"desc-box\">\r\n                        <div className=\"desc-tag\">Description:</div>\r\n                        <div className=\"desc-main\">{role_desc}</div>\r\n                    </div>\r\n                    <div className =\"vote-box\">\r\n                        <div className=\"vote-tag\">Vote:</div>\r\n                        {\r\n                            turn == \"DISCUSSION\"\r\n                            ? <button onClick={()=>this.skipDiscussion()} disabled={skip}>Skip Discussion</button>\r\n                            : null\r\n                        }\r\n                        <div className=\"vote-main\">{user.voteID}</div>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { CHANGE_TURN } from '../Events'\r\nimport ChatContainer from './chat/ChatContainer'\r\nimport PlayArea from './play-area/PlayArea'\r\nimport InfoPanel from './user-info/InfoPanel'\r\n\r\nexport default class Layout extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n    \r\n        this.state = {\r\n            turn:\"\",\r\n            seconds: 10,\r\n            god:\"Welcome To Ultimate Werewolf\"\r\n         };\r\n\r\n         this.initTurn = this.initTurn.bind(this)\r\n         this.resetTimer = this.resetTimer.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.initTurn()\r\n    }\r\n\r\n    resetTimer(time){\r\n        this.setState({seconds: time})\r\n    }\r\n\r\n\r\n   initTurn(){\r\n       const {socket} = this.props\r\n\r\n       socket.on(CHANGE_TURN, (turn, seconds, god)=>{\r\n           this.resetTimer(seconds+1)\r\n           this.setState({turn, seconds, god})\r\n       })  \r\n   }\r\n\r\n    render() {\r\n        const {turn, seconds, god} = this.state\r\n        const {socket, user, connectedUsers, centerDeck} = this.props\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"container-row\">\r\n                    <PlayArea socket={socket} user={user} connectedUsers = {connectedUsers} centerDeck={centerDeck} \r\n                    turn ={turn} seconds={seconds} god={god}/>\r\n                    <InfoPanel socket={socket} user={user} turn={turn} />\r\n                </div>\r\n                <ChatContainer socket={socket} user={user} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport  io from 'socket.io-client'\r\nimport { INITIALIZE, LOGOUT, USER_CONNECTED, VERIFY_USER, RESET, UPDATE_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport Game from './Game'\r\n\r\n//const socketURL = \"/\" //build\r\nconst socketURL = \"http://localhost:3231\" //dev\r\n\r\nexport default class Layout extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            socket: null,\r\n            user:null,\r\n            start:null,\r\n            connectedUsers: null,\r\n            centerDeck: []        \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.initSocket()\r\n    }\r\n\r\n    /*\r\n    *   Connect to and intializes socket.\r\n    */\r\n\r\n    initSocket = ()=>{\r\n        const socket = io(socketURL)\r\n\r\n        socket.on('connect', ()=>{\r\n            if(this.state.user){\r\n                this.reconnect(socket)\r\n            }else{\r\n                console.log(\"Connected\")\r\n            }\r\n            console.log(\"Connected\")\r\n        })\r\n\r\n        socket.on(INITIALIZE, (connectedUsers, centerDeck)=>{\r\n            this.setState({start:true, connectedUsers, centerDeck})\r\n            this.updateUser()\r\n        })\r\n\r\n        socket.on(RESET, ()=>{\r\n            this.setState({user:null, start:null, connectedUsers:null, centerDeck:[]})\r\n        })\r\n\r\n        socket.on(UPDATE_USER, (connectedUsers, gameStart)=>{\r\n            this.setState({connectedUsers, start:gameStart})\r\n            this.updateUser()\r\n        })\r\n\r\n\r\n        this.setState({socket})\r\n    }\r\n\r\n    \r\n    updateUser = () => {\r\n        const {user, connectedUsers} = this.state\r\n           \r\n        if(user){\r\n            Object.keys(connectedUsers).forEach(key =>{\r\n                if(connectedUsers[key].name == user.name){\r\n                    this.setState({user:connectedUsers[key]})\r\n                }\r\n            })\r\n        }\r\n\r\n        console.log(connectedUsers)\r\n    }\r\n\r\n    reconnect = (socket) => {\r\n        socket.emit(VERIFY_USER, this.state.user.name, ({isUser, user})=>{\r\n            if(isUser){\r\n                this.setState({user:null})\r\n            }else{\r\n                this.setUser(user)\r\n            }\r\n        })\r\n    }\r\n\r\n    /*\r\n    * Sets the user property in state\r\n    * @param user {id:number, name:string}\r\n    */\r\n    setUser = (user)=>{\r\n        const { socket } = this.state\r\n        socket.emit(USER_CONNECTED, user);\r\n        this.setState({user})\r\n    }\r\n\r\n    setStart = (start) =>{\r\n        this.setState({start})\r\n    }\r\n\r\n\r\n    render() {\r\n        const { title } = this.props\r\n        const { socket, user, start, connectedUsers, centerDeck} = this.state\r\n        return(\r\n            <div className=\"container\">\r\n                {\r\n                    !user || !start ?\r\n                    <LoginForm socket={socket} setUser={this.setUser} connectedUsers={connectedUsers} />\r\n                    :\r\n                    <Game socket={socket} user={user} connectedUsers={connectedUsers} centerDeck={centerDeck}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport Layout from './components/Layout'\nimport './index.css'\n\nclass App extends Component {\n    render(){\n      return (\n        <Layout title=\"Werewolf\"/>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}